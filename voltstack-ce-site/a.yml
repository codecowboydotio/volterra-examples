apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: unit-pvc
#  namespace: s-vankalken
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
  volumeMode: Filesystem
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: svk-unit
#  namespace: s-vankalken
  labels:
    app: svk-unit
  annotations:
    ves.io/workload-flavor: ves-io-large
#    ves.io/virtual-sites: s-vankalken/s-vankalken-vs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: svk-unit
  template:
    metadata:
      labels:
        app: svk-unit
    spec:
      containers:
      - image: public.ecr.aws/y6q2t0j9/demos:full-unit
        imagePullPolicy: IfNotPresent
        name: svk-unit
        volumeMounts:
        - name: unit-data
          mountPath: /unit-data
        ports:
          - containerPort: 8080
          - containerPort: 8181
          - containerPort: 8182
          - containerPort: 8888
        env:
          - name: PVC
            value: "unit-data"
          - name: UNIT_CONFIG_URL
            value: "https://raw.githubusercontent.com/codecowboydotio/volterra-examples/master/voltstack-ce-site/initial-unit-config.json"
      volumes:
      - name: unit-data
        persistentVolumeClaim:
          claimName: unit-pvc 
---
apiVersion: v1
kind: Service
metadata:
  name: svk-unit
  labels:
    app: svk-unit
spec:
  type: ClusterIP
  selector:
    app: svk-unit
  ports:
  - name: control
    port: 8080
    targetPort: 8080
  - name: app1
    port: 8181
    targetPort: 8181
  - name: app2
    port: 8182
    targetPort: 8182
  - name: app3
    port: 8183
    targetPort: 8183
  - name: app4
    port: 8184
    targetPort: 8184
  - name: app5
    port: 8185
    targetPort: 8185
  - name: config
    port: 8888
    targetPort: 8888
